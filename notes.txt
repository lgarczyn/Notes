
_ C (b * 2 ^ (0 / 12)) = 1 (1)
#   (b * 2 ^ (1 / 12)) = 1.0595 (A 18/17)
_ D (b * 2 ^ (2 / 12)) = 1.1225 (A 9/8)
#   (b * 2 ^ (3 / 12)) = 1.1892 (A 13/11)
_ E (b * 2 ^ (4 / 12)) = 1.2599 (A 5/4)
_ F (b * 2 ^ (5 / 12)) = 1.3348 (A 4/3)
#   (b * 2 ^ (6 / 12)) = 1.4142 (A 17/12) (C# 4/3)
_ G (b * 2 ^ (7 / 12)) = 1.4983 (A 3/2)
#   (b * 2 ^ (8 / 12)) = 1.5874 (A 11/7)
_ A (b * 2 ^ (9 / 12)) = 1.6818 ~(A 5/3)
#   (b * 2 ^ (10 / 12)) = 1.7818 ~(A 9/5)
_ B (b * 2 ^ (11 / 12)) = 1.8877 (A 17/9) ~(G 5/4)
_ C (b * 2 ^ (12 / 12)) = 2 (2)


https://en.wikipedia.org/wiki/Chord_(music)
https://en.wikipedia.org/wiki/C_major
https://en.wikipedia.org/wiki/A_minor
https://en.wikipedia.org/wiki/C_minor





.._._.._._._

A C E

9000
10702...
13484...


1 .
2 _
3 _
4 .
5 _
6 .
7 _
8 .
9 . -> _
0 .
1 _
2 .




playing this in cannon, maybe it works for my scale ?
    https://en.wikipedia.org/wiki/A_minor
    https://en.wikipedia.org/wiki/C_minor

Piste
    every major chords should be written the same
        declaring a major note, and then pulling relative notes ?
        a stack maybe ?
    visualizing tree for easier analysing
        round tree ? prbl not
    check what ratios chords are ?
        Major 1 -> 3/2 -> 5/4
        Minor 1 -> 6/5 OR 32/27 -> 5/4
    other kinds of trees
        exp tree
            line of powers of two on top
        doubly linked tree
            allows to move right upward

same_line same time ?
idention = root note ?
functions ?

G(A, 1, 1, 1) > standard guitar note
G = G(_, 1, 1, 1) > create new G that only takes one argument
R=440
R+-++-+ -> note
E=R+-++- -> define E
M(E) = E,E+-,E-+ -> define major chord
MS(i) = (A, B, C, D, E, F, G)[i] -> create scale

